#include <iostream>
#include <cmath>
using namespace std;

class Shape
{
protected:
  int m_a, m_b, m_c;
public:
  void set_dim(int x, int y, int z);
  virtual void area () = 0;
  virtual void perimetr () = 0;
};


void Shape::set_dim(int x, int y, int z)
{
  m_a = x;
  m_b = y;
  m_c = z;
}

class Triangle:public Shape
{
public:

  void area ()
  {
    int p = 0;
    int s = 0;
     p = (m_a + m_b + m_c) / 2;
     s = sqrt (p * (p - m_a) * (p - m_b) * (p - m_c));
      cout << " Square of triangle:  " << s << endl;
  }
  void perimetr ()
  {
    int p = 0;
    p = m_a + m_b + m_c;
    cout << " Perimetr of triangle:  " << p << endl;
  }
};

class Rectangle:public Shape
{
public:
  void area()
  {
    int s = m_a * m_b;
      cout << " Square of rectangle:  " << s << endl;
  }
  
  void perimetr()
  {
    int p = 2 * (m_a + m_b);
    cout << " Perimetr of rectangle: " << p << endl;
  }
  
};

class Square:public Shape
{
public:
  void area ()
  {
      int s = m_a * m_a;
      cout << " Area of square:  " << s << endl;
  }

  void perimetr()
  {
    int p = 4 * m_a;
    cout << " Perimetr of square:  " << p << endl;
  }
  
};



class Circle:public Shape
{
public:
  void area ()
  {
    double s = 3.14 * m_a * m_a;
      cout << " Area of circle:  " << s << endl;
  }
  void perimetr()
  {
    double p = 3.14 * (2 * m_a);
    cout << " Perimetr of circle: " << p << endl;
  }
};




int main ()
{
  Shape *ptr;
  Triangle object1;
  Rectangle object2;
  Square object3;
  Circle object4;
  ptr = &object1;
  ptr->set_dim (10, 8, 6);
  ptr->area();
  ptr->perimetr();


  return 0;
}
